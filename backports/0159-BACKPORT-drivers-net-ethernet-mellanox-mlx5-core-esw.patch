From: Valentine Fatiev <valentinef@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/eswitch.h

Change-Id: I0558d7b8612f262f505ccd6b2b565fda2c915865
---
 drivers/net/ethernet/mellanox/mlx5/core/eswitch.h | 48 +++++++++++++++--------
 1 file changed, 31 insertions(+), 17 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch.h
@@ -46,7 +46,6 @@
 #include "lib/mpfs.h"
 #include "mlx5_core.h"
 #include "meddev/sf.h"
-#include "en/tc_ct.h"
 
 #define FDB_TC_MAX_CHAIN 3
 #define FDB_FT_CHAIN (FDB_TC_MAX_CHAIN + 1)
@@ -59,10 +58,11 @@
 #define FDB_TC_MAX_PRIO 16
 #define FDB_TC_LEVELS_PER_PRIO 2
 
-#ifdef CONFIG_MLX5_ESWITCH
-
 #define ESW_OFFLOADS_DEFAULT_NUM_GROUPS 15
 
+#ifdef CONFIG_MLX5_ESWITCH
+#include "en/tc_ct.h"
+
 #define MLX5_MAX_UC_PER_VPORT(dev) \
 	(1 << MLX5_CAP_GEN(dev, log_max_current_uc_list))
 
@@ -540,11 +540,17 @@ struct mlx5_esw_flow_attr {
 	struct mlx5e_tc_flow_parse_attr *parse_attr;
 };
 
-int mlx5_devlink_eswitch_mode_set(struct devlink *devlink, u16 mode,
-				  struct netlink_ext_ack *extack);
+int mlx5_devlink_eswitch_mode_set(struct devlink *devlink, u16 mode
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+				 , struct netlink_ext_ack *extack
+#endif
+				 );
 int mlx5_devlink_eswitch_mode_get(struct devlink *devlink, u16 *mode);
-int mlx5_devlink_eswitch_inline_mode_set(struct devlink *devlink, u8 mode,
-					 struct netlink_ext_ack *extack);
+int mlx5_devlink_eswitch_inline_mode_set(struct devlink *devlink, u8 mode
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+					, struct netlink_ext_ack *extack
+#endif
+					);
 int mlx5_devlink_eswitch_inline_mode_get(struct devlink *devlink, u8 *mode);
 int mlx5_eswitch_inline_mode_get(struct mlx5_eswitch *esw, u8 *mode);
 int mlx5_eswitch_vport_modify_other_hca_cap_roce(struct mlx5_eswitch *esw,
@@ -553,13 +559,27 @@ int mlx5_eswitch_vport_get_other_hca_cap
 					      struct mlx5_vport *vport, bool *value);
 
 int mlx5_devlink_eswitch_encap_mode_set(struct devlink *devlink,
-					enum devlink_eswitch_encap_mode encap,
-					struct netlink_ext_ack *extack);
+#ifdef HAVE_DEVLINK_HAS_ESWITCH_ENCAP_MODE_SET_GET_WITH_ENUM
+					enum devlink_eswitch_encap_mode encap
+#else
+					u8 encap
+#endif
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+					, struct netlink_ext_ack *extack
+#endif
+					);
 int mlx5_devlink_eswitch_encap_mode_get(struct devlink *devlink,
+#ifdef HAVE_DEVLINK_HAS_ESWITCH_ENCAP_MODE_SET_GET_WITH_ENUM
 					enum devlink_eswitch_encap_mode *encap);
+#else
+					u8 *encap);
+#endif
 int mlx5_devlink_eswitch_ipsec_mode_set(struct devlink *devlink,
-					enum devlink_eswitch_ipsec_mode ipsec,
-					struct netlink_ext_ack *extack);
+					enum devlink_eswitch_ipsec_mode ipsec
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+					, struct netlink_ext_ack *extack
+#endif
+					);
 int mlx5_devlink_eswitch_ipsec_mode_get(struct devlink *devlink,
 					enum devlink_eswitch_ipsec_mode *ipsec);
 void *mlx5_eswitch_get_uplink_priv(struct mlx5_eswitch *esw, u8 rep_type);
@@ -901,12 +921,6 @@ static inline u16 mlx5_eswitch_max_sfs(c
 	return 0;
 }
 
-static struct mlx5_flow_handle *
-esw_add_restore_rule(struct mlx5_eswitch *esw, u32 tag)
-{
-	return ERR_PTR(-EOPNOTSUPP);
-}
-
 static inline int mlx5_eswitch_setup_sf_vport(struct mlx5_eswitch *esw, u16 vport_num){ return 0; }
 static inline void mlx5_eswitch_cleanup_sf_vport(struct mlx5_eswitch *esw, u16 vport_num){ return; }
 static inline int mlx5_eswitch_set_vport_mac(struct mlx5_eswitch *esw,
