From: Chris Mi <chrism@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/en_tc.h

Change-Id: I775cf775e8daa5cbe4447543663ea2fe9d33a0a4
---
 drivers/net/ethernet/mellanox/mlx5/core/en_tc.h | 34 +++++++++++++++++++++++--
 1 file changed, 32 insertions(+), 2 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.h
@@ -34,8 +34,12 @@
 #define __MLX5_EN_TC_H__
 
 #include <net/pkt_cls.h>
+#ifdef HAVE_TCF_TUNNEL_INFO
 #include <net/ip_tunnels.h>
+#endif
+#if defined(HAVE_KERNEL_WITH_VXLAN_SUPPORT_ON)
 #include <net/vxlan.h>
+#endif
 #include "eswitch.h"
 
 #define MLX5E_TC_FLOW_ID_MASK 0x0000ffff
@@ -69,12 +73,15 @@ enum {
 	MLX5E_TC_FLOW_CT_ORIG     = BIT(MLX5E_TC_FLOW_BASE + 9),
 };
 
+#ifdef HAVE_TC_FLOWER_OFFLOAD
 #define MLX5E_TC_MAX_SPLITS 1
 
 struct mlx5_nic_flow_attr {
 	u32 action;
 	u32 flow_tag;
+#ifdef HAVE_TCF_PEDIT_TCFP_KEYS_EX
 	u32 mod_hdr_id;
+#endif
 	u32 hairpin_tirn;
 	u8 match_level;
 	struct mlx5_flow_table	*hairpin_ft;
@@ -88,16 +95,24 @@ struct mlx5e_tc_flow {
 	atomic_t		flags;
 	struct mlx5_flow_handle *rule[MLX5E_TC_MAX_SPLITS + 1];
 	struct mlx5e_tc_flow    *peer_flow;
+#ifdef HAVE_TCF_TUNNEL_INFO
 	struct mlx5e_encap_entry *e; /* attached encap instance */
 	struct list_head	encap;   /* flows sharing the same encap ID */
+#endif
 	unsigned long encap_init_jiffies;
 	struct mlx5e_mod_hdr_entry *mh; /* attached mod header instance */
+#ifdef HAVE_TCF_PEDIT_TCFP_KEYS_EX
 	struct list_head	mod_hdr; /* flows sharing the same mod hdr ID */
+#endif
 	struct mlx5e_hairpin_entry *hpe; /* attached hairpin instance */
 	struct list_head	hairpin; /* flows sharing the same hairpin */
 	struct list_head        peer; /* flows with peer flow */
 	struct list_head        unready; /* flows not ready to be offloaded (e.g due to missing route) */
+#ifdef HAVE_REFCOUNT
 	refcount_t		refcnt;
+#else
+	atomic_t		refcnt;
+#endif
 	struct list_head        tmp_list;
 	struct rcu_head		rcu_head;
 
@@ -116,13 +131,18 @@ struct mlx5e_tc_flow {
 };
 
 struct mlx5e_tc_flow_parse_attr {
+#ifdef HAVE_TCF_TUNNEL_INFO
 	struct ip_tunnel_info tun_info;
+#endif
 	struct mlx5_flow_spec spec;
+#ifdef HAVE_TCF_PEDIT_TCFP_KEYS_EX
 	int num_mod_hdr_actions;
 	int max_mod_hdr_actions;
 	void *mod_hdr_actions;
+#endif
 	int mirred_ifindex;
 };
+#endif /* HAVE_TC_FLOWER_OFFLOAD */
 
 #define MLX5_MH_ACT_SZ MLX5_UN_SZ_BYTES(set_action_in_add_action_in_auto)
 
@@ -132,14 +152,18 @@ void mlx5e_tc_nic_cleanup(struct mlx5e_p
 int mlx5e_tc_esw_init(struct mlx5e_priv *priv);
 void mlx5e_tc_esw_cleanup(struct mlx5e_priv *priv);
 
+#ifdef HAVE_TC_FLOWER_OFFLOAD
 int mlx5e_configure_flower(struct mlx5e_priv *priv,
 			   struct tc_cls_flower_offload *f, int flags);
 int mlx5e_delete_flower(struct mlx5e_priv *priv,
 			struct tc_cls_flower_offload *f, int flags);
 
+#ifdef HAVE_TC_CLSFLOWER_STATS
 int mlx5e_stats_flower(struct mlx5e_priv *priv,
 		       struct tc_cls_flower_offload *f, int flags);
+#endif
 
+#ifdef HAVE_TCF_TUNNEL_INFO
 struct mlx5e_encap_entry;
 void mlx5e_tc_encap_flows_add(struct mlx5e_priv *priv,
 			      struct mlx5e_encap_entry *e,
@@ -152,6 +176,7 @@ void mlx5e_encap_put(struct mlx5e_priv *
 
 struct mlx5e_neigh_hash_entry;
 void mlx5e_tc_update_neigh_used_value(struct mlx5e_neigh_hash_entry *nhe);
+#endif
 
 int mlx5e_tc_num_filters(struct mlx5e_priv *priv, int flags);
 void mlx5e_tc_reoffload_flows_work(struct mlx5_core_dev *mdev);
@@ -163,8 +188,12 @@ void mlx5e_flow_put(struct mlx5e_priv *p
 		    struct mlx5e_tc_flow *flow);
 int mlx5e_tc_add_fdb_flow(struct mlx5e_priv *priv,
 			  struct mlx5e_tc_flow_parse_attr *parse_attr,
-			  struct mlx5e_tc_flow *flow,
-			  struct netlink_ext_ack *extack);
+			  struct mlx5e_tc_flow *flow
+#ifdef HAVE_TC_CLS_OFFLOAD_EXTACK
+			  ,struct netlink_ext_ack *extack
+#endif
+			  );
+
 int mlx5e_alloc_flow(struct mlx5e_priv *priv, int attr_size,
 		     struct tc_cls_flower_offload *f,
 		     u32 flow_flags, gfp_t flags,
@@ -176,6 +205,7 @@ int alloc_mod_hdr_actions(struct mlx5e_p
 			  gfp_t flags);
 int mlx5e_tc_update_and_init_done_fdb_flow(struct mlx5e_priv *priv,
 					   struct mlx5e_tc_flow *flow);
+#endif /* HAVE_TC_FLOWER_OFFLOAD */
 
 #else /* CONFIG_MLX5_ESWITCH */
 static inline int  mlx5e_tc_nic_init(struct mlx5e_priv *priv) { return 0; }
