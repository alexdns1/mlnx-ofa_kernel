From: Valentine Fatiev <valentinef@nvidia.com>
Subject: [PATCH] BACKPORT: drivers/infiniband/ulp/isert/ib_isert.c

Change-Id: I6d834b119aed411cc84f938474f1957eaad9b73b
---
 drivers/infiniband/ulp/isert/ib_isert.c | 60 +++++++++++++++++++++++++
 1 file changed, 60 insertions(+)

--- a/drivers/infiniband/ulp/isert/ib_isert.c
+++ b/drivers/infiniband/ulp/isert/ib_isert.c
@@ -1120,7 +1120,11 @@ sequence_cmd:
 	rc = iscsit_sequence_cmd(conn, cmd, buf, hdr->cmdsn);
 
 	if (!rc && !dump_payload && unsol_data)
+#ifdef HAVE_ISCSIT_SET_UNSOLICITED_DATAOUT
 		iscsit_set_unsolicited_dataout(cmd);
+#else
+		iscsit_set_unsoliticed_dataout(cmd);
+#endif
 	else if (dump_payload && imm_data)
 		target_put_sess_cmd(&cmd->se_cmd);
 
@@ -1571,12 +1575,20 @@ isert_check_pi_status(struct se_cmd *se_
 		}
 		sec_offset_err = mr_status.sig_err.sig_err_offset;
 		do_div(sec_offset_err, block_size);
+#ifdef HAVE_SE_CMD_HAS_SENSE_INFO
 		se_cmd->sense_info = sec_offset_err + se_cmd->t_task_lba;
+#else
+		se_cmd->bad_sector = sec_offset_err + se_cmd->t_task_lba;
+#endif
 
 		isert_err("PI error found type %d at sector 0x%llx "
 			  "expected 0x%x vs actual 0x%x\n",
 			  mr_status.sig_err.err_type,
+#ifdef HAVE_SE_CMD_HAS_SENSE_INFO
 			  (unsigned long long)se_cmd->sense_info,
+#else
+			  (unsigned long long)se_cmd->bad_sector,
+#endif
 			  mr_status.sig_err.expected,
 			  mr_status.sig_err.actual);
 		ret = 1;
@@ -2426,11 +2438,47 @@ isert_set_conn_info(struct iscsi_np *np,
 {
 	struct rdma_cm_id *cm_id = isert_conn->cm_id;
 	struct rdma_route *cm_route = &cm_id->route;
+#ifndef HAVE_ISCSIT_CONN_LOGIN_SOCKADDR
+	struct sockaddr_in *sock_in;
+	struct sockaddr_in6 *sock_in6;
+#endif
 
 	conn->login_family = np->np_sockaddr.ss_family;
 
+#ifdef HAVE_ISCSIT_CONN_LOGIN_SOCKADDR
 	conn->login_sockaddr = cm_route->addr.dst_addr;
 	conn->local_sockaddr = cm_route->addr.src_addr;
+#else
+	if (np->np_sockaddr.ss_family == AF_INET6) {
+		sock_in6 = (struct sockaddr_in6 *)&cm_route->addr.dst_addr;
+		snprintf(conn->login_ip, sizeof(conn->login_ip), "%pI6c",
+		         &sock_in6->sin6_addr.in6_u);
+		conn->login_port = ntohs(sock_in6->sin6_port);
+
+		sock_in6 = (struct sockaddr_in6 *)&cm_route->addr.src_addr;
+#ifdef HAVE_ISCSIT_CONN_LOCAL_SOCKADDR
+		memcpy(&conn->local_sockaddr , &sock_in6, sizeof(sock_in6));
+#else
+		snprintf(conn->local_ip, sizeof(conn->local_ip), "%pI6c",
+		         &sock_in6->sin6_addr.in6_u);
+		conn->local_port = ntohs(sock_in6->sin6_port);
+#endif /* HAVE_ISCSIT_CONN_LOCAL_SOCKADDR */
+	} else {
+		sock_in = (struct sockaddr_in *)&cm_route->addr.dst_addr;
+		sprintf(conn->login_ip, "%pI4",
+		        &sock_in->sin_addr.s_addr);
+		conn->login_port = ntohs(sock_in->sin_port);
+
+		sock_in = (struct sockaddr_in *)&cm_route->addr.src_addr;
+#ifdef HAVE_ISCSIT_CONN_LOCAL_SOCKADDR
+		memcpy(&conn->local_sockaddr , &sock_in, sizeof(sock_in));
+#else
+		sprintf(conn->local_ip, "%pI4",
+		        &sock_in->sin_addr.s_addr);
+		conn->local_port = ntohs(sock_in->sin_port);
+#endif /* HAVE_ISCSIT_CONN_LOCAL_SOCKADDR */
+	}
+#endif /* HAVE_ISCSIT_CONN_LOGIN_SOCKADDR */
 }
 
 static int
@@ -2565,8 +2613,17 @@ isert_wait4cmds(struct iscsit_conn *conn
 	isert_info("iscsit_conn %p\n", conn);
 
 	if (conn->sess) {
+#ifdef HAVE_TARGET_STOP_CMD_COUNTER
 		target_stop_cmd_counter(conn->cmd_cnt);
 		target_wait_for_cmds(conn->cmd_cnt);
+#else
+#ifdef HAVE_TARGET_STOP_SESSION
+		target_stop_session(conn->sess->se_sess);
+#else
+		target_sess_cmd_list_set_waiting(conn->sess->se_sess);
+#endif
+		target_wait_for_sess_cmds(conn->sess->se_sess);
+#endif
 	}
 }
 
@@ -2711,6 +2768,9 @@ static void __exit isert_exit(void)
 MODULE_DESCRIPTION("iSER-Target for mainline target infrastructure");
 MODULE_AUTHOR("nab@Linux-iSCSI.org");
 MODULE_LICENSE("GPL");
+#ifdef RETPOLINE_MLNX
+MODULE_INFO(retpoline, "Y");
+#endif
 
 module_init(isert_init);
 module_exit(isert_exit);
