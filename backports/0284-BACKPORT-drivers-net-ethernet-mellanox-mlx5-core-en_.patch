From: Raed Salem <raeds@nvidia.com>
Subject: [PATCH] BACKPORT:
 drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_rxtx.h

Change-Id: I63b69cdc7e536e35192b7d06cffc76cdec3978f5
Signed-off-by: Raed Salem <raeds@nvidia.com>
---
 .../ethernet/mellanox/mlx5/core/en_accel/ipsec_rxtx.h  | 10 ++++++++++
 1 file changed, 10 insertions(+)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_rxtx.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_accel/ipsec_rxtx.h
@@ -49,6 +49,9 @@ struct mlx5e_accel_tx_ipsec_state {
 	struct xfrm_state *x;
 	u32 tailen;
 	u32 plen;
+#ifndef HAVE_XFRM_OFFLOAD_INNER_IPPROTO
+	u8 inner_ipproto;
+#endif
 };
 
 #ifdef CONFIG_MLX5_EN_IPSEC
@@ -91,6 +94,9 @@ static inline bool mlx5e_ipsec_eseg_meta
 }
 
 void mlx5e_ipsec_tx_build_eseg(struct mlx5e_priv *priv, struct sk_buff *skb,
+#ifndef HAVE_XFRM_OFFLOAD_INNER_IPPROTO
+			       struct mlx5e_accel_tx_ipsec_state *ipsec_st,
+#endif
 			       struct mlx5_wqe_eth_seg *eseg);
 
 static inline netdev_features_t
@@ -98,7 +104,11 @@ mlx5e_ipsec_feature_check(struct sk_buff
 {
 	struct xfrm_offload *xo = xfrm_offload(skb);
 	struct sec_path *sp = skb_sec_path(skb);
+#ifdef HAVE_XFRM_OFFLOAD_INNER_IPPROTO
+	u8 inner_ipproto = xo->inner_ipproto;
+#else
 	u8 inner_ipproto = 0;
+#endif
 
 	if (sp && sp->len && xo) {
 		struct xfrm_state *x = sp->xvec[0];
