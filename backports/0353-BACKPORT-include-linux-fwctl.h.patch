From: Valentine Fatiev <valentinef@nvidia.com>
Subject: [PATCH] BACKPORT: include/linux/fwctl.h

Change-Id: I63abcfe8a3d4004aa2e492b0f455b2dab0e02252
---
 include/linux/fwctl.h | 13 +++++++++++++
 1 file changed, 13 insertions(+)

--- a/include/linux/fwctl.h
+++ b/include/linux/fwctl.h
@@ -4,6 +4,9 @@
  */
 #ifndef __LINUX_FWCTL_H
 #define __LINUX_FWCTL_H
+
+#include "../../compat/config.h"
+
 #include <linux/device.h>
 #include <linux/cdev.h>
 #include <linux/cleanup.h>
@@ -95,6 +98,7 @@ struct fwctl_device *_fwctl_alloc_device
  * Upon success the pointer must be freed via fwctl_put(). Returns a 'drv_struct
  * \*' on success, NULL on error.
  */
+#ifdef HAVE_STATIC_ASSERT
 #define fwctl_alloc_device(parent, ops, drv_struct, member)               \
 	({                                                                \
 		static_assert(__same_type(struct fwctl_device,            \
@@ -103,6 +107,15 @@ struct fwctl_device *_fwctl_alloc_device
 		(drv_struct *)_fwctl_alloc_device(parent, ops,            \
 						  sizeof(drv_struct));    \
 	})
+#else
+#define fwctl_alloc_device(parent, ops, drv_struct, member)                  \
+	container_of(_fwctl_alloc_device(                                    \
+			     parent, ops,                                    \
+			     sizeof(drv_struct) +                            \
+				     BUILD_BUG_ON_ZERO(                      \
+					     offsetof(drv_struct, member))), \
+		     drv_struct, member)
+#endif
 
 static inline struct fwctl_device *fwctl_get(struct fwctl_device *fwctl)
 {
