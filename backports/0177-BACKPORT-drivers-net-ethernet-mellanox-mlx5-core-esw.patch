From: Jianbo Liu <jianbol@mellanox.cim>
Subject: [PATCH] BACKPORT:
 drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c

Change-Id: I5cb6f90b04ab40b71c2a6e80977f622331211d3f
---
 .../ethernet/mellanox/mlx5/core/eswitch_offloads.c | 68 +++++++++++++++++-----
 1 file changed, 53 insertions(+), 15 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c
@@ -2830,15 +2830,24 @@ static int eswitch_devlink_pf_support_ch
 		!mlx5_core_is_ecpf_esw_manager(esw->dev)) ? -EOPNOTSUPP : 0;
 }
 
-int mlx5_devlink_eswitch_mode_set(struct devlink *devlink, u16 mode,
-				  struct netlink_ext_ack *extack)
+int mlx5_devlink_eswitch_mode_set(struct devlink *devlink, u16 mode
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+				 , struct netlink_ext_ack *extack
+#endif
+				 )
 {
+#ifndef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+	struct netlink_ext_ack *extack;
+#endif
 	struct mlx5_core_dev *dev = devlink_priv(devlink);
 	struct mlx5_eswitch *esw = dev->priv.eswitch;
 	u16 cur_mlx5_mode, mlx5_mode = 0;
 	struct mlx5_lag *ldev;
 	int err;
 
+#ifndef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+	extack = NULL;
+#endif
 	err = mlx5_eswitch_check(dev);
 	if (err)
 		return err;
@@ -2901,25 +2910,32 @@ int mlx5_devlink_eswitch_mode_get(struct
 	if (err)
 		return err;
 
-	mutex_lock(&esw->mode_lock);
 	err = eswitch_devlink_pf_support_check(esw);
 	if (err)
 		goto done;
 
 	err = esw_mode_to_devlink(esw->mode, mode);
 done:
-	mutex_unlock(&esw->mode_lock);
 	return err;
 }
 
-int mlx5_devlink_eswitch_inline_mode_set(struct devlink *devlink, u8 mode,
-					 struct netlink_ext_ack *extack)
+int mlx5_devlink_eswitch_inline_mode_set(struct devlink *devlink, u8 mode
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+				 	, struct netlink_ext_ack *extack
+#endif
+				 	)
 {
+#ifndef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+	struct netlink_ext_ack *extack;
+#endif
 	struct mlx5_core_dev *dev = devlink_priv(devlink);
 	struct mlx5_eswitch *esw = dev->priv.eswitch;
 	int err, vport, num_vport;
 	u8 mlx5_mode;
 
+#ifndef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+	extack = NULL;
+#endif
 	err = mlx5_eswitch_check(dev);
 	if (err)
 		return err;
@@ -2989,14 +3005,12 @@ int mlx5_devlink_eswitch_inline_mode_get
 	if (err)
 		return err;
 
-	mutex_lock(&esw->mode_lock);
 	err = eswitch_devlink_pf_support_check(esw);
 	if (err)
 		goto done;
 
 	err = esw_inline_mode_to_devlink(esw->offloads.inline_mode, mode);
 done:
-	mutex_unlock(&esw->mode_lock);
 	return err;
 }
 
@@ -3038,12 +3052,25 @@ out:
 }
 
 int mlx5_devlink_eswitch_encap_mode_set(struct devlink *devlink,
-					enum devlink_eswitch_encap_mode encap,
-					struct netlink_ext_ack *extack)
+#ifdef HAVE_DEVLINK_HAS_ESWITCH_ENCAP_MODE_SET_GET_WITH_ENUM
+					enum devlink_eswitch_encap_mode encap
+#else
+					u8 encap
+#endif
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+				 	, struct netlink_ext_ack *extack
+#endif
+				 	)
 {
+#ifndef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+	struct netlink_ext_ack *extack;
+#endif
 	struct mlx5_core_dev *dev = devlink_priv(devlink);
 	struct mlx5_eswitch *esw = dev->priv.eswitch;
 	int err;
+#ifndef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+	extack = NULL;
+#endif
 
 	err = mlx5_eswitch_check(dev);
 	if (err)
@@ -3101,7 +3128,11 @@ done:
 }
 
 int mlx5_devlink_eswitch_encap_mode_get(struct devlink *devlink,
+#ifdef HAVE_DEVLINK_HAS_ESWITCH_ENCAP_MODE_SET_GET_WITH_ENUM
 					enum devlink_eswitch_encap_mode *encap)
+#else
+					u8 *encap)
+#endif
 {
 	struct mlx5_core_dev *dev = devlink_priv(devlink);
 	struct mlx5_eswitch *esw = dev->priv.eswitch;
@@ -3111,26 +3142,33 @@ int mlx5_devlink_eswitch_encap_mode_get(
 	if (err)
 		return err;
 
-	mutex_lock(&esw->mode_lock);
 	err = eswitch_devlink_pf_support_check(esw);
 	if (err)
 		goto done;
 
 	*encap = esw->offloads.encap;
 done:
-	mutex_unlock(&esw->mode_lock);
 	return 0;
 }
 
 int mlx5_devlink_eswitch_ipsec_mode_set(struct devlink *devlink,
-					enum devlink_eswitch_ipsec_mode ipsec,
-					struct netlink_ext_ack *extack)
+					enum devlink_eswitch_ipsec_mode ipsec
+#ifdef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+					, struct netlink_ext_ack *extack
+#endif
+)
 {
+#ifndef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+	struct netlink_ext_ack *extack;
+#endif
 	struct mlx5_core_dev *dev = devlink_priv(devlink);
 	struct mlx5_eswitch *esw = dev->priv.eswitch;
 	int err = 0;
-
+#ifndef HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK
+	extack = NULL;
+#else
 	memset(extack, 0, sizeof(*extack));
+#endif
 	err = mlx5_eswitch_check(dev);
 	if (err)
 		return err;
