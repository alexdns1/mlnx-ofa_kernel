From: Valentine Fatiev <valentinef@nvidia.com>
Subject: [PATCH] BACKPORT: include/rdma/ib_umem.h

Change-Id: I7afad8be1c4391c6717973e47b9312982aee45fd
---
 include/rdma/ib_umem.h | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

--- a/include/rdma/ib_umem.h
+++ b/include/rdma/ib_umem.h
@@ -7,6 +7,8 @@
 #ifndef IB_UMEM_H
 #define IB_UMEM_H
 
+#include "../../compat/config.h"
+
 #include <linux/list.h>
 #include <linux/scatterlist.h>
 #include <linux/workqueue.h>
@@ -17,12 +19,19 @@ struct ib_umem_odp;
 struct dma_buf_attach_ops;
 
 struct ib_umem {
+#ifdef HAVE_MMU_NOTIFIER_OPS_HAS_FREE_NOTIFIER
 	struct ib_device       *ibdev;
+#else
+	struct ib_ucontext     *context;
+#endif
 	struct mm_struct       *owning_mm;
 	u64 iova;
 	size_t			length;
 	unsigned long		address;
 	u32 writable : 1;
+#if !defined(HAVE_FOLL_LONGTERM) && !defined(HAVE_GET_USER_PAGES_LONGTERM)
+	u32 hugetlb : 1;
+#endif
 	u32 is_odp : 1;
 	u32 is_dmabuf : 1;
 	/* Placing at the end of the bitfield list is ABI preserving on LE */
@@ -31,6 +40,9 @@ struct ib_umem {
 	struct sg_table sg_head;
 	int             nmap;
 	unsigned int    sg_nents;
+#ifdef HAVE_SG_APPEND_TABLE
+	struct sg_append_table sgt_append;
+#endif
 };
 
 struct ib_umem_dmabuf {
@@ -105,7 +117,11 @@ static inline void __rdma_umem_block_ite
 
 #ifdef CONFIG_INFINIBAND_USER_MEM
 
+#ifdef HAVE_MMU_INTERVAL_NOTIFIER
 struct ib_umem *ib_umem_get(struct ib_device *device, unsigned long addr,
+#else
+struct ib_umem *ib_umem_get(struct ib_udata *udata, unsigned long addr,
+#endif
 			    size_t size, int access);
 void ib_umem_release(struct ib_umem *umem);
 int ib_umem_copy_from(void *dst, struct ib_umem *umem, size_t offset,
@@ -151,7 +167,11 @@ struct ib_umem_dmabuf *ib_umem_dmabuf_ge
 int ib_umem_dmabuf_map_pages(struct ib_umem_dmabuf *umem_dmabuf);
 void ib_umem_dmabuf_unmap_pages(struct ib_umem_dmabuf *umem_dmabuf);
 void ib_umem_dmabuf_release(struct ib_umem_dmabuf *umem_dmabuf);
+#ifdef HAVE_MMU_INTERVAL_NOTIFIER
 struct ib_umem *ib_umem_get_peer(struct ib_device *device, unsigned long addr,
+#else
+struct ib_umem *ib_umem_get_peer(struct ib_udata *udata, unsigned long addr,
+#endif
 				 size_t size, int access,
 				 unsigned long peer_mem_flags);
 void ib_umem_activate_invalidation_notifier(struct ib_umem *umem,
@@ -163,7 +183,11 @@ void ib_umem_stop_invalidation_notifier(
 
 #include <linux/err.h>
 
+#ifdef HAVE_MMU_INTERVAL_NOTIFIER
 static inline struct ib_umem *ib_umem_get(struct ib_device *device,
+#else
+static inline struct ib_umem *ib_umem_get(struct ib_udata *udata,
+#endif
 					  unsigned long addr, size_t size,
 					  int access)
 {
