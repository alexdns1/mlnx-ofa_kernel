From: Valentine Fatiev <valentinef@nvidia.com>
Subject: [PATCH] BACKPORT: net/sunrpc/xprtrdma/xprt_rdma.h

Change-Id: I4a748521f15a3bea3e97d88cf6f3762a8c716057
---
 net/sunrpc/xprtrdma/xprt_rdma.h | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

--- a/net/sunrpc/xprtrdma/xprt_rdma.h
+++ b/net/sunrpc/xprtrdma/xprt_rdma.h
@@ -56,7 +56,9 @@
 #include <linux/sunrpc/rpc_rdma_cid.h> 	/* completion IDs */
 #include <linux/sunrpc/rpc_rdma.h> 	/* RPC/RDMA protocol */
 #include <linux/sunrpc/xprtrdma.h> 	/* xprt parameters */
+#ifdef HAVE_RPCRDMA_RN_REGISTER
 #include <linux/sunrpc/rdma_rn.h>	/* removal notifications */
+#endif
 
 #define RDMA_RESOLVE_TIMEOUT	(5000)	/* 5 seconds */
 #define RDMA_CONNECT_RETRY_MAX	(2)	/* retries if no listener backlog */
@@ -93,7 +95,9 @@ struct rpcrdma_ep {
 	struct rpcrdma_connect_private
 				re_cm_private;
 	struct rdma_conn_param	re_remote_cma;
+#ifdef HAVE_RPCRDMA_RN_REGISTER
 	struct rpcrdma_notification	re_rn;
+#endif
 	int			re_receive_count;
 	unsigned int		re_max_requests; /* depends on device */
 	unsigned int		re_inline_send;	/* negotiated */
@@ -367,6 +371,9 @@ struct rpcrdma_buffer {
 	struct list_head	rb_send_bufs;
 	struct list_head	rb_mrs;
 
+#ifndef HAVE_XPRT_WAIT_FOR_BUFFER_SPACE_RQST_ARG
+	unsigned long		rb_flags;
+#endif
 	unsigned long		rb_sc_head;
 	unsigned long		rb_sc_tail;
 	unsigned long		rb_sc_last;
@@ -431,7 +438,9 @@ struct rpcrdma_xprt {
 	struct rpcrdma_ep	*rx_ep;
 	struct rpcrdma_buffer	rx_buf;
 	struct delayed_work	rx_connect_worker;
+#ifdef HAVE_XPRT_RECONNECT_DELAY
 	struct rpc_timeout	rx_timeout;
+#endif
 	struct rpcrdma_stats	rx_stats;
 };
 
@@ -459,6 +468,13 @@ extern int xprt_rdma_pad_optimize;
  */
 extern unsigned int xprt_rdma_memreg_strategy;
 
+#ifndef HAVE_XPRT_WAIT_FOR_BUFFER_SPACE_RQST_ARG
+/* rb_flags */
+enum {
+	RPCRDMA_BUF_F_EMPTY_SCQ = 0,
+};
+#endif
+
 /*
  * Endpoint calls - xprtrdma/verbs.c
  */
@@ -592,8 +608,13 @@ void xprt_rdma_cleanup(void);
  */
 #if defined(CONFIG_SUNRPC_BACKCHANNEL)
 int xprt_rdma_bc_setup(struct rpc_xprt *, unsigned int);
+#ifdef HAVE_RPC_XPRT_OPS_BC_UP
+int xprt_rdma_bc_up(struct svc_serv *, struct net *);
+#endif
 size_t xprt_rdma_bc_maxpayload(struct rpc_xprt *);
+#ifdef HAVE_RPC_XPRT_OPS_BC_NUM_SLOTS
 unsigned int xprt_rdma_bc_max_slots(struct rpc_xprt *);
+#endif
 void rpcrdma_bc_receive_call(struct rpcrdma_xprt *, struct rpcrdma_rep *);
 int xprt_rdma_bc_send_reply(struct rpc_rqst *rqst);
 void xprt_rdma_bc_free_rqst(struct rpc_rqst *);
