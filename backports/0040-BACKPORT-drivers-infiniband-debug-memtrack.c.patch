From: Valentine Fatiev <valentinef@nvidia.com>
Subject: [PATCH] BACKPORT: drivers/infiniband/debug/memtrack.c

Change-Id: I4cfa73bcf341fc52a131e770f63111339f122092
---
 drivers/infiniband/debug/memtrack.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

--- a/drivers/infiniband/debug/memtrack.c
+++ b/drivers/infiniband/debug/memtrack.c
@@ -839,7 +839,9 @@ int is_non_trackable_free_func(const cha
 		"mlxdevm_cmd_rate_set_node",
 		"mlxdevm_cmd_rate_set_leaf",
 		/* hwmon functions */
+#ifdef HAVE_HWMON_SANITIZE_NAME
 		"mlx5_hwmon_free_name",
+#endif
 	};
 	size_t str_cmp_arr_size = sizeof(str_cmp_arr)/sizeof(char *);
 	int i;
@@ -1120,9 +1122,15 @@ static ssize_t memtrack_read(struct file
 	}
 }
 
+#ifdef HAVE_PROC_OPS_STRUCT 
 static const struct proc_ops memtrack_proc_ops = {
 	.proc_read = memtrack_read,
 };
+#else
+static const struct file_operations memtrack_proc_fops = {
+        .read = memtrack_read,
+};
+#endif
 
 static const char *memtrack_proc_entry_name = "mt_memtrack";
 
@@ -1141,7 +1149,11 @@ static int create_procfs_tree(void)
 
 	for (i = 0, bit_mask = 1; i < MEMTRACK_NUM_OF_MEMTYPES; ++i, bit_mask <<= 1) {
 		if (bit_mask & track_mask) {
+#ifdef HAVE_PROC_OPS_STRUCT 
 			proc_ent = proc_create_data(rsc_names[i], S_IRUGO, memtrack_tree, &memtrack_proc_ops, NULL);
+#else
+			proc_ent = proc_create_data(rsc_names[i], S_IRUGO, memtrack_tree, &memtrack_proc_fops, NULL);
+#endif
 			if (!proc_ent) {
 				printk(KERN_INFO "Warning: Cannot create /proc/%s/%s\n",
 				       memtrack_proc_entry_name, rsc_names[i]);
@@ -1231,7 +1243,11 @@ int memtrack_inject_error(struct module
 		return 0;
 
 	if (inject_freq) {
+#ifdef HAVE_GET_RANDOM_U32
 		if (!(get_random_u32() % inject_freq)) {
+#else
+		if (!(prandom_u32() % inject_freq)) {
+#endif
 			val = inject_error_record(module_obj->name,
 						  file_name, func_name,
 						  caller_func_name,
