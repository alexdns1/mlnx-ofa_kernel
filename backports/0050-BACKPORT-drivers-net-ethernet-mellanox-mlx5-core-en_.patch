From: Alaa Hleihel <alaa@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/en_sysfs.c

Change-Id: Ie28dfbe74b637d2e1aa496faa0ec9ce12dc17411
---
 .../ethernet/mellanox/mlx5/core/en_sysfs.c    | 27 +++++++++++++++++--
 1 file changed, 25 insertions(+), 2 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en_sysfs.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_sysfs.c
@@ -32,18 +32,22 @@
 
 #include <linux/device.h>
 #include <linux/netdevice.h>
+#include <linux/dcbnl.h>
 #include "en.h"
 #include "en_ecn.h"
 #include "eswitch.h"
+#ifdef HAVE_IEEE_DCBNL_ETS
 #ifdef CONFIG_MLX5_CORE_EN_DCB
 #include "en_port_buffer.h"
 #endif
+#endif
 
 #define MLX5E_SKPRIOS_NUM   16
 #define MLX5E_GBPS_TO_KBPS 1000000
 #define MLX5E_100MBPS_TO_KBPS 100000
 #define set_kobj_mode(mdev) mlx5_core_is_pf(mdev) ? S_IWUSR | S_IRUGO : S_IRUGO
 
+#if defined(HAVE_NETDEV_GET_NUM_TC) && defined(HAVE_NETDEV_SET_NUM_TC)
 static ssize_t mlx5e_show_tc_num(struct device *device,
 				 struct device_attribute *attr,
 				 char *buf)
@@ -63,6 +67,9 @@ static ssize_t mlx5e_store_tc_num(struct
 {
 	struct mlx5e_priv *priv = netdev_priv(to_net_dev(device));
 	struct net_device *netdev = priv->netdev;
+#if defined(HAVE_NDO_SETUP_TC_TAKES_TC_SETUP_TYPE) || defined(HAVE_NDO_SETUP_TC_RH_EXTENDED)
+	struct tc_mqprio_qopt mqprio = { 0 };
+#endif
 	int tc_num;
 	int err = 0;
 
@@ -72,10 +79,16 @@ static ssize_t mlx5e_store_tc_num(struct
 		return -EINVAL;
 
 	rtnl_lock();
+#if defined(HAVE_NDO_SETUP_TC_TAKES_TC_SETUP_TYPE) || defined(HAVE_NDO_SETUP_TC_RH_EXTENDED)
+	mqprio.num_tc = tc_num;
+	mlx5e_setup_tc_mqprio(netdev, &mqprio);
+#else
 	mlx5e_setup_tc(netdev, tc_num);
+#endif
 	rtnl_unlock();
 	return count;
 }
+#endif
 
 static  ssize_t mlx5e_show_maxrate(struct device *device,
 				   struct device_attribute *attr,
@@ -184,8 +197,10 @@ out:
 
 static DEVICE_ATTR(maxrate, S_IRUGO | S_IWUSR,
 		   mlx5e_show_maxrate, mlx5e_store_maxrate);
+#if defined(HAVE_NETDEV_GET_NUM_TC) && defined(HAVE_NETDEV_SET_NUM_TC)
 static DEVICE_ATTR(tc_num, S_IRUGO | S_IWUSR,
 		   mlx5e_show_tc_num, mlx5e_store_tc_num);
+#endif
 
 static ssize_t mlx5e_show_lro_timeout(struct device *device,
 				      struct device_attribute *attr,
@@ -750,6 +765,7 @@ static void mlx5e_remove_attributes(stru
 	}
 }
 
+#ifdef HAVE_IEEE_DCBNL_ETS
 #ifdef CONFIG_MLX5_CORE_EN_DCB
 static ssize_t mlx5e_show_prio2buffer(struct device *device,
 				      struct device_attribute *attr,
@@ -890,7 +906,9 @@ static ssize_t mlx5e_store_buffer_size(s
 	return count;
 }
 #endif
+#endif
 
+#ifdef HAVE_IEEE_DCBNL_ETS
 #ifdef CONFIG_MLX5_CORE_EN_DCB
 static DEVICE_ATTR(buffer_size, S_IRUGO | S_IWUSR,
 		   mlx5e_show_buffer_size,
@@ -900,6 +918,7 @@ static DEVICE_ATTR(prio2buffer, S_IRUGO
 		   mlx5e_show_prio2buffer,
 		   mlx5e_store_prio2buffer);
 #endif
+#endif
 
 #ifdef CONFIG_MLX5_ESWITCH
 static DEVICE_ATTR(vf_roce, S_IRUGO | S_IWUSR,
@@ -925,7 +944,9 @@ static struct attribute *mlx5e_debug_gro
 };
 
 static struct attribute *mlx5e_qos_attrs[] = {
+#if defined(HAVE_NETDEV_GET_NUM_TC) && defined(HAVE_NETDEV_SET_NUM_TC)
 	&dev_attr_tc_num.attr,
+#endif
 	&dev_attr_maxrate.attr,
 	NULL,
 };
@@ -945,6 +966,7 @@ static int update_qos_sysfs(struct net_d
 {
 	int err = 0;
 
+#ifdef HAVE_IEEE_DCBNL_ETS
 #ifdef CONFIG_MLX5_CORE_EN_DCB
 	if (MLX5_BUFFER_SUPPORTED(mdev)) {
 		err = sysfs_add_file_to_group(&dev->dev.kobj,
@@ -955,6 +977,7 @@ static int update_qos_sysfs(struct net_d
 					      "qos");
 	}
 #endif
+#endif
 
 	return err;
 }
@@ -1046,7 +1069,7 @@ void mlx5e_sysfs_remove(struct net_devic
 	kobject_put(priv->ecn_root_kobj);
 }
 
-#ifdef CONFIG_MLX5_EN_SPECIAL_SQ
+#if defined (CONFIG_MLX5_EN_SPECIAL_SQ) && (defined(HAVE_NDO_SET_TX_MAXRATE) || defined(HAVE_NDO_SET_TX_MAXRATE_EXTENDED))
 enum {
 	ATTR_DST_IP,
 	ATTR_DST_PORT,
@@ -1204,4 +1227,4 @@ void mlx5e_rl_remove_sysfs(struct mlx5e_
 		sysfs_remove_group(&txq->kobj, &mlx5e_txmap_attr);
 	}
 }
-#endif /*CONFIG_MLX5_EN_SPECIAL_SQ*/
+#endif /* CONFIG_MLX5_EN_SPECIAL_SQ && HAVE_NDO_SET_TX_MAXRATE */
