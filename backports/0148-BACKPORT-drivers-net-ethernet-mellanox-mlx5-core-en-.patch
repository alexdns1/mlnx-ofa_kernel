From: Valentine Fatiev <valentinef@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/en/xsk/rx.c

Change-Id: Icac9bb888c2002390555ad412d96069da526b9ea
---
 drivers/net/ethernet/mellanox/mlx5/core/en/xsk/rx.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en/xsk/rx.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en/xsk/rx.c
@@ -1,6 +1,8 @@
 // SPDX-License-Identifier: GPL-2.0 OR Linux-OpenIB
 /* Copyright (c) 2019 Mellanox Technologies. */
 
+#ifdef HAVE_XSK_UMEM_CONSUME_TX_GET_2_PARAMS
+
 #include "rx.h"
 #include "en/xdp.h"
 #include <net/xdp_sock.h>
@@ -23,9 +25,12 @@ int mlx5e_xsk_page_alloc_umem(struct mlx
 
 	if (!xsk_umem_peek_addr_rq(umem, &handle))
 		return -ENOMEM;
-
+#ifdef HAVE_XSK_UMEM_ADJUST_OFFSET
 	dma_info->xsk.handle = xsk_umem_adjust_offset(umem, handle,
 						      rq->buff.umem_headroom);
+#else
+	dma_info->xsk.handle = handle + rq->buff.umem_headroom;
+#endif
 	dma_info->xsk.data = xdp_umem_get_data(umem, dma_info->xsk.handle);
 
 	/* No need to add headroom to the DMA address. In striding RQ case, we
@@ -34,8 +39,11 @@ int mlx5e_xsk_page_alloc_umem(struct mlx
 	 * accounted in mlx5e_alloc_rx_wqe.
 	 */
 	dma_info->addr = xdp_umem_get_dma(umem, handle);
-
+#ifdef HAVE_XSK_UMEM_RELEASE_ADDR_RQ
 	xsk_umem_release_addr_rq(umem);
+#else
+	xsk_umem_discard_addr_rq(umem);
+#endif
 
 	dma_sync_single_for_device(rq->pdev, dma_info->addr, PAGE_SIZE,
 				   DMA_BIDIRECTIONAL);
@@ -191,3 +199,4 @@ struct sk_buff *mlx5e_xsk_skb_from_cqe_l
 	 */
 	return mlx5e_xsk_construct_skb(rq, data, cqe_bcnt);
 }
+#endif /*HAVE_XSK_UMEM_CONSUME_TX_GET_2_PARAMS*/
