From: Valentine Fatiev <valentinef@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/en_dcbnl.c

Change-Id: Ie1dd2fc0f205c8e3277d9b89f1707ceefb7bbd14
---
 .../ethernet/mellanox/mlx5/core/en_dcbnl.c    | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en_dcbnl.c
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_dcbnl.c
@@ -61,6 +61,7 @@ enum {
 				   MLX5_CAP_QCAM_REG(mdev, qpts) && \
 				   MLX5_CAP_QCAM_REG(mdev, qpdpm))
 
+#ifdef CONFIG_MLX5_CORE_EN_DCB
 static int mlx5e_set_trust_state(struct mlx5e_priv *priv, u8 trust_state);
 static int mlx5e_set_dscp2prio(struct mlx5e_priv *priv, u8 dscp, u8 prio);
 
@@ -901,6 +902,7 @@ static void mlx5e_dcbnl_setpfcstate(stru
 	cee_cfg->pfc_enable = state;
 }
 
+#ifdef HAVE_DCBNL_GETBUFFER
 static int mlx5e_dcbnl_getbuffer(struct net_device *dev,
 				 struct dcbnl_buffer *dcb_buffer)
 {
@@ -984,8 +986,13 @@ static int mlx5e_dcbnl_setbuffer(struct
 					      buffer_size, prio2buffer);
 	return err;
 }
+#endif
 
+#ifdef CONFIG_COMPAT_IS_DCBNL_OPS_CONST
 static const struct dcbnl_rtnl_ops mlx5e_dcbnl_ops = {
+#else
+struct dcbnl_rtnl_ops mlx5e_dcbnl_ops = {
+#endif
 	.ieee_getets	= mlx5e_dcbnl_ieee_getets,
 	.ieee_setets	= mlx5e_dcbnl_ieee_setets,
 	.ieee_getmaxrate = mlx5e_dcbnl_ieee_getmaxrate,
@@ -996,8 +1003,10 @@ static const struct dcbnl_rtnl_ops mlx5e
 	.ieee_delapp    = mlx5e_dcbnl_ieee_delapp,
 	.getdcbx	= mlx5e_dcbnl_getdcbx,
 	.setdcbx	= mlx5e_dcbnl_setdcbx,
+#ifdef HAVE_DCBNL_GETBUFFER
 	.dcbnl_getbuffer = mlx5e_dcbnl_getbuffer,
 	.dcbnl_setbuffer = mlx5e_dcbnl_setbuffer,
+#endif
 
 /* CEE interfaces */
 	.setall         = mlx5e_dcbnl_setall,
@@ -1149,7 +1158,9 @@ static int mlx5e_update_trust_state_hw(s
 
 static int mlx5e_set_trust_state(struct mlx5e_priv *priv, u8 trust_state)
 {
+#if defined(HAVE_NDO_SETUP_TC_TAKES_TC_SETUP_TYPE) || defined(HAVE_NDO_SETUP_TC_RH_EXTENDED)
 	struct tc_mqprio_qopt mqprio = {.num_tc = MLX5E_MAX_NUM_TC};
+#endif
 	struct mlx5e_channels new_channels = {};
 	bool reset_channels = true;
 	int err = 0;
@@ -1181,7 +1192,12 @@ static int mlx5e_set_trust_state(struct
 
 	/* In DSCP trust state, we need 8 send queues per channel */
 	if (priv->dcbx_dp.trust_state == MLX5_QPTS_TRUST_DSCP)
-		mlx5e_setup_tc_mqprio(priv, &mqprio);
+#if defined(HAVE_NDO_SETUP_TC_TAKES_TC_SETUP_TYPE) || defined(HAVE_NDO_SETUP_TC_RH_EXTENDED)
+                mlx5e_setup_tc_mqprio(priv, &mqprio);
+#else
+                mlx5e_setup_tc(priv->netdev, MLX5E_MAX_NUM_TC);
+#endif
+
 
 	return err;
 }
@@ -1265,3 +1281,4 @@ void mlx5e_dcbnl_initialize(struct mlx5e
 
 	mlx5e_ets_init(priv);
 }
+#endif
