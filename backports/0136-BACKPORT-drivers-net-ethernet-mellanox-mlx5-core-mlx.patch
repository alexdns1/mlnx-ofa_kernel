From: Valentine Fatiev <valentinef@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h

Change-Id: I939b73510dcf836f3801078cb8dca07d70ffd772
---
 .../ethernet/mellanox/mlx5/core/mlx5_core.h   | 29 ++++++++++++++-----
 1 file changed, 21 insertions(+), 8 deletions(-)

--- a/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/mlx5_core.h
@@ -296,12 +296,6 @@ void mlx5_events_stop(struct mlx5_core_d
 void mlx5_lag_enable(struct mlx5_core_dev *dev, struct mlx5_lag *ldev);
 struct mlx5_lag *mlx5_lag_disable(struct mlx5_core_dev *dev);
 
-int esw_offloads_load_all_reps(struct mlx5_eswitch *esw);
-int esw_offloads_reload_reps(struct mlx5_eswitch *esw);
-int esw_offloads_config_single_fdb(struct mlx5_eswitch *master_esw,
-				   struct mlx5_eswitch *slave_esw);
-void esw_offloads_destroy_single_fdb(struct mlx5_eswitch *master_esw,
-				     struct mlx5_eswitch *slave_esw);
 struct mlx5_vport *mlx5_eswitch_get_vport(struct mlx5_eswitch *esw,
 					  u16 vport_num);
 struct mlx5_flow_root_namespace *find_root(struct fs_node *node);
@@ -337,8 +331,11 @@ void mlx5_dm_cleanup(struct mlx5_core_de
 			    MLX5_CAP_MCAM_FEATURE((mdev), mtpps_fs) &&	\
 			    MLX5_CAP_MCAM_FEATURE((mdev), mtpps_enh_out_per_adj))
 
-int mlx5_firmware_flash(struct mlx5_core_dev *dev, const struct firmware *fw,
-			struct netlink_ext_ack *extack);
+int mlx5_firmware_flash(struct mlx5_core_dev *dev, const struct firmware *fw
+#ifdef HAVE_NETLINK_EXT_ACK
+			, struct netlink_ext_ack *extack
+#endif
+);
 int mlx5_fw_version_query(struct mlx5_core_dev *dev,
 			  u32 *running_ver, u32 *stored_ver);
 
@@ -471,6 +468,22 @@ static inline void mlx5_meddev_unregiste
 }
 #endif
 
+#ifdef CONFIG_MLX5_ESWITCH
+int esw_offloads_load_all_reps(struct mlx5_eswitch *esw);
+int esw_offloads_reload_reps(struct mlx5_eswitch *esw);
+int esw_offloads_config_single_fdb(struct mlx5_eswitch *master_esw,
+				   struct mlx5_eswitch *slave_esw);
+void esw_offloads_destroy_single_fdb(struct mlx5_eswitch *master_esw,
+				     struct mlx5_eswitch *slave_esw);
+#else
+static inline int esw_offloads_load_all_reps(struct mlx5_eswitch *esw) { return 0; }
+static inline int esw_offloads_reload_reps(struct mlx5_eswitch *esw) { return 0; }
+static inline int esw_offloads_config_single_fdb(struct mlx5_eswitch *master_esw,
+				    		 struct mlx5_eswitch *slave_esw) { return 0; }
+static inline void esw_offloads_destroy_single_fdb(struct mlx5_eswitch *master_esw,
+                                		   struct mlx5_eswitch *slave_esw) { return;  }
+
+#endif
 struct mlx5_core_dev *mlx5_get_core_dev(const struct device *dev);
 
 void mlx5_pcie_print_link_status(struct mlx5_core_dev *dev);
