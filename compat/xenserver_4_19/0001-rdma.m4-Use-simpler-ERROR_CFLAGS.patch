From 70c003810255684da8a113a5f849f46b09323067 Mon Sep 17 00:00:00 2001
From: Tzafrir Cohen <tzafrirc@nvidia.com>
Date: Thu, 21 Nov 2024 18:39:36 +0200
Subject: [PATCH] rdma.m4: Use simpler ERROR_CFLAGS

* Use -Werror in test builds
* Add only three extra flags that add exceptions for common exceptions:
  -Wno-unused-variable, -Wno-uninitialized -Wno-missing-braces
* Fix some test cases to work to avoid warning (that were now turned
  to be errors).
* If a specific warning could not be easily fixed: mark it in the test
  case with a gcc pragma. It will have an effect on the test case
  alone as it is a separate code module.

The redefinition of no_free_ptr() in our include/linux/cleanup.h has
been made conditional as it is available in kernel >= 6.5 .

Note:
* HAVE_DEVICE_ADD_DISK_3_ARGS_NO_RETURN is now an error in some cases
  where it was not before, but in all of those cases
  HAVE_DEVICE_ADD_DISK_3_ARGS_AND_RETURN seems to be set, so
  HAVE_DEVICE_ADD_DISK_3_ARGS from the main configure script remains
  the same?

FIXME:
* Is it OK to remove __init from the header of the test function?

Issue: 4176618
Change-Id: I7364c330a5beb48a3ef720f1073403ac1c113b8a
Signed-off-by: Tzafrir Cohen <tzafrirc@nvidia.com>
---
 compat/config/rdma.m4   | 72 +++++++++++++++++++++++++++++++----------
 include/linux/cleanup.h |  2 ++
 2 files changed, 57 insertions(+), 17 deletions(-)

diff --git a/compat/config/rdma.m4 b/compat/config/rdma.m4
index xxxxxxx..xxxxxxx 100644
--- a/compat/config/rdma.m4
+++ b/compat/config/rdma.m4
@@ -5,7 +5,15 @@ AC_DEFUN([MLNX_RDMA_SET_GLOBALS],
 	MLNX_RDMA_MODULES_DIR="$PWD/modtest"
 	MLNX_RDMA_TEST_MOD="testmod"
 	MLNX_RDMA_RUN_LOG="$MLNX_RDMA_MODULES_DIR/run.log"
-	ERROR_FLAGS="-Werror-implicit-function-declaration -Wno-unused-variable -Wno-uninitialized -Werror=int-conversion -Werror=discarded-qualifiers"
+	# Generally handle any warning as error (-Werror), except:
+	# -Wno-unused-variable: A common pattern is to initialize a
+	#                       variable to make sure e.g. a field exists
+	#                       but not bother using it later.
+	# -Wno-uninitialized: A common pattern in tests is to use
+	#                     uninitialized values, so we won't have to
+	#                     worry about their type.
+	# -Wno-missing-braces: Harmless and almost always wrong
+	ERROR_FLAGS="-Werror -Wno-unused-variable -Wno-uninitialized -Wno-missing-braces"
 ])
 
 AC_DEFUN([MLNX_RDMA_TEST_CASE],
@@ -22,7 +30,7 @@ AC_DEFUN([MLNX_RDMA_TEST_CASE],
 #include <linux/kernel.h>
 MODULE_LICENSE("GPL");
 $3
-static int __init test_func (void) {
+static int test_func (void) {
 $4
 	return 0;
 }
@@ -90,6 +98,10 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_NDO_LOCK_STATUS_GET_GET_ERROR_STATUS, [dpll_pin_ops.lock_status_get has status_error], [
 		#include <linux/dpll.h>
 
+		int my_lock_status_get(const struct dpll_device *dpll, void *dpll_priv,
+					       enum dpll_lock_status *status,
+					       enum dpll_lock_status_error *status_error,
+					       struct netlink_ext_ack *extack);
 		int my_lock_status_get(const struct dpll_device *dpll, void *dpll_priv,
 		                               enum dpll_lock_status *status,
                 		               enum dpll_lock_status_error *status_error,
@@ -688,7 +700,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 
         MLNX_RDMA_TEST_CASE(HAVE_DEVLINK_PARAM_SET_FUNCTION_POINTER_HAS_EXTACK, [struct devlink_param set function pointer has extack parameter], [
                 #include <net/devlink.h>
-		static int param_set(struct devlink *devlink,
+		int param_set(struct devlink *devlink,
 				     u32 id,
 			             struct devlink_param_gset_ctx *ctx,
 			             struct netlink_ext_ack *extack);
@@ -1094,6 +1106,8 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 
 	MLNX_RDMA_TEST_CASE(HAVE_DEVLINK_ESWITCH_MODE_SET_EXTACK, [struct devlink_ops.eswitch_mode_set has extack], [
 		#include <net/devlink.h>
+		int mlx5_devlink_eswitch_mode_set(struct devlink *devlink, u16 mode,
+		                                struct netlink_ext_ack *extack);
 		int mlx5_devlink_eswitch_mode_set(struct devlink *devlink, u16 mode,
 		                                struct netlink_ext_ack *extack) {
 			return 0;
@@ -1551,10 +1565,14 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 
 	MLNX_RDMA_TEST_CASE(HAVE_NL_SET_ERR_MSG_WEAK_MOD, [NL_SET_ERR_MSG_WEAK_MOD exists], [
 		#include <linux/netlink.h>
+
+		// Declared static to avoid -Werror=address because a test
+		// of (extack) always evaluates as true)
+		static struct netlink_ext_ack extack_static;
 	],[
-		struct netlink_ext_ack extack = {};
+		struct netlink_ext_ack *extack = &extack_static;
 
-		NL_SET_ERR_MSG_WEAK_MOD(&extack, "test");
+		NL_SET_ERR_MSG_WEAK_MOD(extack, "test");
 		return 0;
 	])
 
@@ -1791,8 +1809,10 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_SWITCHDEV_OPS, [HAVE_SWITCHDEV_OPS is defined], [
 		#include <net/switchdev.h>
 		#include <linux/netdevice.h>
+
+		/* Declare here to avoid dandling pointer error */
+		static struct switchdev_ops x;
 	],[
-		struct switchdev_ops x;
 		struct net_device *ndev;
 
 		ndev->switchdev_ops = &x;
@@ -1931,7 +1951,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 		#include <linux/if_vlan.h>
 	],[
 		struct vlan_ethhdr vhdr = {
-			.addrs = {0},
+			.addrs = {{0}},
 		};
 
 		return 0;
@@ -2195,6 +2215,8 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_NDO_GET_PORT_PARENT_ID, [HAVE_NDO_GET_PORT_PARENT_ID is defined], [
 		#include <linux/netdevice.h>
 
+		int get_port_parent_id(struct net_device *dev,
+				       struct netdev_phys_item_id *ppid);
 		int get_port_parent_id(struct net_device *dev,
 				       struct netdev_phys_item_id *ppid)
 		{
@@ -2592,7 +2614,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_SYSFS_EMIT, [sysfs_emit is defined], [
 		#include <linux/sysfs.h>
 	],[
-		sysfs_emit(NULL, "");
+		sysfs_emit(NULL, "foo");
 
 		return 0;
 	])
@@ -2708,6 +2730,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_FIB6_INFO_NH_DEV, [function fib6_info_nh_dev exists], [
 		#include <net/nexthop.h>
 	],[
+		#pragma GCC diagnostic ignored "-Warray-bounds"
 		fib6_info_nh_dev(NULL);
                 return 0;
 	])
@@ -2888,6 +2911,8 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_NDO_BRIDGE_SETLINK_EXTACK, [ndo_bridge_setlink is defined], [
 		#include <linux/netdevice.h>
 
+		int bridge_setlink(struct net_device *dev, struct nlmsghdr *nlh,
+				   u16 flags, struct netlink_ext_ack *extack);
 		int bridge_setlink(struct net_device *dev, struct nlmsghdr *nlh,
 				   u16 flags, struct netlink_ext_ack *extack)
 		{
@@ -2904,6 +2929,8 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 		#include <linux/netdevice.h>
 		#include <linux/if_link.h>
 
+		int get_vf_guid(struct net_device *dev, int vf, struct ifla_vf_guid *node_guid,
+                                                   struct ifla_vf_guid *port_guid);
 		int get_vf_guid(struct net_device *dev, int vf, struct ifla_vf_guid *node_guid,
                                                    struct ifla_vf_guid *port_guid)
 
@@ -3021,7 +3048,8 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_STRSCPY_PAD, [strscpy_pad is defined], [
 		#include <linux/string.h>
 	],[
-		strscpy_pad(NULL, NULL, 0);
+		char buf[[10]];
+		strscpy_pad(buf, "str", 8);
 
 		return 0;
 	])
@@ -3470,6 +3498,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_SCSI_HOST_BUSY_ITER_FN_2_ARGS, [scsi_host.h scsi_host_busy_iter fn has 2 args], [
 		#include <scsi/scsi_host.h>
 
+		bool fn(struct scsi_cmnd *scmnd, void *ctx);
 		bool fn(struct scsi_cmnd *scmnd, void *ctx)
 		{
 			return false;
@@ -3511,8 +3540,9 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 
 	MLNX_RDMA_TEST_CASE(HAVE_SCSI_DEVICE_BUDGET_MAP, [scsi_device.h struct scsi_device has member budget_map], [
 		#include <scsi/scsi_device.h>
+		/* If it is stack, we get error that frame is too large: */
+		static struct scsi_device sdev;
 	],[
-		struct scsi_device sdev;
 		sbitmap_init_node(&sdev.budget_map, 0, 0, 0, 0, false, false);
 
 		return 0;
@@ -3751,6 +3781,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_FLOW_ACTION_HW_STATS_CHECK, [flow_action_hw_stats_check exists], [
 		#include <net/flow_offload.h>
 	],[
+		#pragma GCC diagnostic ignored "-Warray-bounds"
 		flow_action_hw_stats_check(NULL, NULL, 0);
 		return 0;
 	])
@@ -3891,6 +3922,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_NDO_TX_TIMEOUT_GET_2_PARAMS, [ndo_tx_timeout get 2 params], [
 		#include <linux/netdevice.h>
 
+		void mlx5e_tx_timeout(struct net_device *dev, unsigned int txqueue);
 		void mlx5e_tx_timeout(struct net_device *dev, unsigned int txqueue)
 		{
 			return;
@@ -3985,12 +4017,14 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_AUTO_TYPE, [__auto_type exists], [
 		#include <linux/compiler.h>
 
-		#define no_free_ptr(p) \
+		/* Lifed from the definition of no_free_ptr: */
+		/* FIXME: remove redefinition of no_free_ptr in include/linux/cleanup.h */
+		#define auto_test_no_free_ptr(p) \
 		        ({ __auto_type __ptr = (p); (p) = NULL; __ptr; })
 	],[
 		int * a;
 
-		no_free_ptr(a);
+		auto_test_no_free_ptr(a);
 
 		return 0;
 	])
@@ -4160,7 +4194,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	])
 
 	MLNX_RDMA_TEST_CASE(HAVE_SG_ALLOC_TABLE_FROM_PAGES_GET_9_PARAMS, [__sg_alloc_table_from_pages has 9 params], [
-                #include <linux/scatterlist.h>;
+                #include <linux/scatterlist.h>
 	],[
 		struct scatterlist *sg;
 
@@ -5111,6 +5145,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_XPRT_OPS_SEND_REQUEST_RQST_ARG, [*send_request has 'struct rpc_rqst *req' as a param], [
 		#include <linux/sunrpc/xprt.h>
 
+		int send_request(struct rpc_rqst *req);
 		int send_request(struct rpc_rqst *req)
 		{
 			return 0;
@@ -5212,9 +5247,9 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 
 	MLNX_RDMA_TEST_CASE(HAVE_XPRT_WAIT_FOR_BUFFER_SPACE_RQST_ARG, [xprt_wait_for_buffer_space has xprt as a parameter], [
 		#include <linux/sunrpc/xprt.h>
+		/* If it is stack, we get error that frame is too large: */
+		static struct rpc_xprt xprt;
 	],[
-		struct rpc_xprt xprt = {0};
-
 		xprt_wait_for_buffer_space(&xprt);
 
 		return 0;
@@ -5271,6 +5306,7 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 	MLNX_RDMA_TEST_CASE(HAVE_XPRT_CLASS_NETID, [struct xprt_class has 'netid' field], [
 		#include <linux/sunrpc/xprt.h>
 	],[
+		#pragma GCC diagnostic ignored "-Wunused-value"
 		struct xprt_class xc;
 
 		xc.netid;
@@ -5491,15 +5527,17 @@ AC_DEFUN([MLNX_RDMA_CREATE_MODULES],
 		#include <linux/device/class.h>
 	],[
 	        const struct class *c = NULL;
+		int ret;
 
-		class_register(c);
+		ret = class_register(c);
 
-		return 0;
+		return ret;
 	])
 
 	MLNX_RDMA_TEST_CASE(HAVE___NETDEV_TX_SENT_QUEUE, [netdevice.h has __netdev_tx_sent_queue], [
 		#include <linux/netdevice.h>
 	],[
+		#pragma GCC diagnostic ignored "-Warray-bounds"
 		__netdev_tx_sent_queue(NULL, 0, 0);
 
 		return 0;
diff --git a/include/linux/cleanup.h b/include/linux/cleanup.h
index xxxxxxx..xxxxxxx 100644
--- a/include/linux/cleanup.h
+++ b/include/linux/cleanup.h
@@ -50,9 +50,11 @@
 #define __free(_name)	__cleanup(__free_##_name)
 
 #ifdef HAVE_AUTO_TYPE
+#ifndef no_free_ptr
 #define no_free_ptr(p) \
 	({ __auto_type __ptr = (p); (p) = NULL; __ptr; })
 #endif
+#endif
 
 #define return_ptr(p)	return no_free_ptr(p)
 /*
-- 
2.38.1

